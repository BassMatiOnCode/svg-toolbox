<!DOCTYPE html>
<html lang="en-US"><head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="template-info" file-name="empty.htm" version="2025-03-14" editor="USP" />
<meta name="author" content="USP" />
<meta name="creation-date" content="2025-03-19" />
<meta name="editor" content="USP" />
<meta name="change-date" content="2025-03-19" />
<meta name="version" content="1" />

<link rel="icon" type="image/svg+xml" href="/favicon.svg" sizes="all" />
 
<meta name="tags" content="project, SVG, toolbox, figure, line, equation, two, point, form" />
<meta name="description" content="Illustration of the two-point form of the line equation." />

<title>Point-Slope Form of a Line Equation</title>

</head><body>

<svg id="svgRoot" xmlns="http://www.w3.org/2000/svg" 
	viewBox="-30 -270 300 300" width="300" height="300" 
	stroke="black" stroke-width="1" stroke-linecap="round" stroke-linejoin="round" fill="none" 
	style="border:1px none silver">

<style type="text/css">
	tspan.sub { baseline-shift:sub ; font-size: 70% }
	</style>

<defs>
	<marker id="arrow" markerWidth="10" markerHeight="10" refX="8" refY="5" markerUnits="strokeWidth" orient="auto-start-reverse">
		<path stroke="context-stroke" d="M 1 1 L 9 5 1 9" />
		</marker>
	</defs>
	
<g id="grid">
	<g id="grid-axes" stroke="grey"></g>
	<g id="grid-lines" stroke="darkgrey"></g>
	<g id="point-coordinate-lines" stroke="darkgrey"></g>
	</g>
<g id="construction" stroke="darkgrey"></g>
<g id="main"></g>
<g id="points" fill="white"></g>
<g id="annotations" stroke-width="4" stroke="white" fill="black" paint-order="stroke fill" text-anchor="middle" dominant-baseline="middle" font-size="14"></g>

</svg>

<script type="module"> // <![CDATA[
import { Line } from "../../code/line/line-1.js" ;
import { Circle } from "../../code/circle/circle.js" ;
import { setDefaultInjectionTarget } from "../../code/core/core.js" ;
import { Text } from "../../code/text/text.js" ;
	
	// The line
setDefaultInjectionTarget( "main" );
const lineA = new Line( { x1: -20, y1: -40, x2: 250, y2: -220 } );

	// Points
setDefaultInjectionTarget( "points" );
const p1 = new Circle( { p1: lineA.pointAt( { x: 40 } ), r: 3 } );
const p2 = new Circle( { p1: lineA.pointAt( { x: 210 } ), r: 3 } );
new Circle( { x: p2.x, y: p1.y, r: 3 } );

	// Coordinate sytem axes
setDefaultInjectionTarget( "grid-axes" );
const xAxis = new Line( { x1: -20, x2: 260 }, { "marker-end" : "url(#arrow)" } );
const yAxis = new Line( { y1: 20, y2: -260 }, { "marker-end" : "url(#arrow)" } );
	
	// Coordinate lines
setDefaultInjectionTarget( "point-coordinate-lines" );
new Line( { x1: -5, x2: p2.x + 10, y1: p1.y, y2: p1.y } ) ;
new Line( { x1: -5, x2: p2.x + 10, y1: p2.y, y2: p2.y } ) ;
new Line( { y1: +5, y2: p1.y - 10, x1: p1.x, x2: p1.x } ) ;
new Line( { y1: +5, y2: p2.y - 10, x1: p2.x, x2: p2.x } ) ;

	// Annotations
setDefaultInjectionTarget( "annotations" );
new Text( "O", { }, { "dominant-baseline" : "central", "stroke-width" : 6 } );
new Text( "x", { x: xAxis.x2 - 20 } );
new Text( "y", { y: yAxis.y2 + 20 } );
new Text( "P<tspan class='sub'>1</tspan>", { x: p1.x, y: p1.y - 18 } );
new Text( "P", { x: p2.x, y: p2.y - 18 } );
new Text( "x<tspan class='sub'>1</tspan>", { x: p1.x, y: +15 } );
new Text( "x", { x: p2.x, y: +15 } );
new Text( "y<tspan class='sub'>1</tspan>", { y: p1.y, x: -15 } );
new Text( "y", { y: p2.y, x: -15 } );
new Text( "x&minus;x<tspan class='sub'>1</tspan>", { x: ( p2.x + p1.x ) / 2, y: p1.y } ) ;
new Text( "y&minus;y<tspan class='sub'>1</tspan>", { y: ( p2.y + p1.y ) / 2, x: p2.x } ) ;
// ]]
</script></body></html>