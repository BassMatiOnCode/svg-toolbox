<!DOCTYPE html>
<html lang="en-US"><head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="template-info" file-name="empty.htm" version="2024-12-20" editor="USP" />
<meta name="author" content="USP" />
<meta name="creation-date" content="2025-03-16" />
<meta name="editor" content="USP" />
<meta name="change-date" content="2025-03-16" />
<meta name="version" content="1" />
<meta name="sectionTitle" content="../title.svg" />

<link rel="icon" type="image/svg+xml" href="/favicon.svg" sizes="all" />
<link rel="stylesheet" href="/inc/webcat/page-structure/tutorial-page.css" />
<script type="module" src="/inc/webcat/page-structure/tutorial-page.js" ></script>
 
<meta name="categories" content="Projects > SVG Toolbox > Circle" />
<meta name="tags" content="web, authoring, toolbox, SVG, JavaScript, component, circle" />
<meta name="description" content="" />

<title>Circle (SVG-Toolbox > Circle)</title>

</head><body>

<h1>Circle</h1><p class="subtitle">A wrapper for the SVG circle element</p>

<h2 cbc>Introduction</h2><div>

<p>The <tt>Circle</tt> class encapsulates an <a href="SVGCircleElement"><tt>SVGCircleElement</tt></a>.</p>

<!--h2--Introduction--></div>

<h2 cbc>Using the Component</h2><div>

<p>The component consists of a single file:</p>

<ul>
<li>path/to/circle.js</li>
</ul>

<p>Use an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import">import</a> statement to import the module and get access to the exported symbols.</p>

<!--h2--Using the Component--></div>

<h2 cbc>Examples</h2><div>

<h3 cbc>Example 1</h3><div>

<p>This demo creates a wrapper for an existing <tt>SVGCircleElement</tt> and an new <tt>Circle</tt> object.</p>

<figure class="listing"><figcaption></figcaption><pre>
import { <hi>Circle</hi> } from "path/to/circle-1.js" ;
const <hi>circleA</hi> = new Circle( { fromCircle: "<hi>CircleA</hi>" } ) ;
console.debug( circleA.x, circleA.y, circleA.r );
</pre></figure>

<p>The next instructions create a new circle and uses the properties of <tt>circleA</tt>:</p>

<figure class="listing"><figcaption></figcaption><pre>
const circleB = new Circle( { x: circleA.x + 0, y: circleA.y + 10, r: circleA.r - 10, attributes: { stroke: "red" } } );
console.debug( circleB.x, circleB.y, circleB.r );
</pre></figure>

<p>Demo:</p>

<figure class="demo"><figcaption>Creating circles (<a href="demo-01.htm" target="_blank">demo-01.htm</a>)</figcaption>
<object class="content-height-observed no-border" type="text/html" data="demo-01.htm"></object>
</figure>

<!--h3--Example 1--></div>

<!--h2--Examples--></div>

<h2 cbc>Programming Reference</h2><div>

<p></p>

<h3 cbc></h3><div>

<p>Syntax:</p>

<pre></pre>

<p>Parameters:</p>
<dl>
<dt></dt>
	<dd>{} </dd>
<dt>returns</dt>
	<dd>{} </dd>
</dl>

<p></p>

<figure class="demo"><figcaption> (<a href="demo-01.htm" target="_blank">demo-01.htm</a>)</figcaption>
<object class="content-height-observed no-border" type="text/html" data="demo-01.htm"></object>
</figure>

<p></p>

<!--h3----></div>

<!--h2--Programming Reference--></div>

<h2 cbc="collapsed">Implementation Details</h2><div>

<p>For implementation details, refer to the <a href="">sourcecode</a> of the module.</p>

<p></p>

<figure class="listing"><figcaption></figcaption>
<pre>
<cc>// Comment</cc> 
function <hi>name</hi> ( ) {
	...
	}
</pre></figure>

<!--h2--Implementation Details--></div>

</body></html>